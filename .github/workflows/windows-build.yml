name: Build Aseprite for Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v1.1

    - name: Setup Visual Studio Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Setup CMake
      uses: lukka/get-cmake@latest

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    # Download and setup Skia for Windows
    - name: Download Skia
      shell: cmd
      run: |
        mkdir deps\skia
        cd deps\skia
        curl -L -o skia.zip https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Windows-Release-x64.zip
        7z x skia.zip
        del skia.zip

    # Install vcpkg and OpenSSL
    - name: Install OpenSSL
      shell: cmd
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        bootstrap-vcpkg.bat
        vcpkg install openssl:x64-windows
        mkdir ..\deps\openssl
        copy installed\x64-windows\bin\libcrypto-3-x64.dll ..\deps\openssl\
        copy installed\x64-windows\bin\libssl-3-x64.dll ..\deps\openssl\

    - name: Create Build Directory
      run: mkdir build
      
    - name: Configure CMake
      working-directory: build
      shell: cmd
      run: |
        cmake -G Ninja ^
          -DCMAKE_BUILD_TYPE=RelWithDebInfo ^
          -DLAF_BACKEND=skia ^
          -DSKIA_DIR=%CD%/../deps/skia ^
          -DSKIA_RELEASE=true ^
          -DENABLE_TESTS=OFF ^
          -DENABLE_UI=ON ^
          -DENABLE_UPDATER=OFF ^
          -DCMAKE_C_COMPILER=cl ^
          -DCMAKE_CXX_COMPILER=cl ^
          ..

    - name: Build Aseprite
      working-directory: build
      shell: cmd
      run: |
        ninja aseprite
        dir bin

    - name: Prepare Artifacts
      shell: cmd
      run: |
        mkdir dist
        xcopy /E /I /Y build\bin dist\bin
        xcopy /E /I /Y data dist\data
        if exist deps\skia\*.dll copy deps\skia\*.dll dist\bin\
        if exist deps\openssl\*.dll copy deps\openssl\*.dll dist\bin\
        if exist "C:\Windows\System32\msvcp140.dll" copy "C:\Windows\System32\msvcp140.dll" dist\bin\
        if exist "C:\Windows\System32\vcruntime140.dll" copy "C:\Windows\System32\vcruntime140.dll" dist\bin\
        if exist "C:\Windows\System32\vcruntime140_1.dll" copy "C:\Windows\System32\vcruntime140_1.dll" dist\bin\
        echo "Creating portable config file..."
        echo { "portable": true } > dist\aseprite.ini
        echo "Contents of dist directory:"
        dir /s dist

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: aseprite-windows-portable
        path: dist
        if-no-files-found: error
